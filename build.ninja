builddir = out

rule compile
    command = $cc -MD -MF $out.d -g -Werror -c $in -o $out
    depfile = $out.d
    deps    = gcc

rule link
    command = $cc $in -o $out

rule run
    command = $env ./$in > $out

brew         = ~/brew/opt/llvm/bin/clang
clang_cflags = -fcolor-diagnostics -Xclang -nostdsysteminc -Weverything

opt  = clang $clang_cflags -O2
xsan = clang $clang_cflags -fsanitize=address,integer,undefined -fno-sanitize-recover=all
lsan = $brew $clang_cflags -fsanitize=address,integer,undefined -fno-sanitize-recover=all

build out/opt/weft.o: compile weft.c
    cc = $opt
build out/opt/test.o: compile test.c
    cc = $opt
build out/opt/test: link out/opt/weft.o out/opt/test.o
    cc = $opt
build out/opt/test.ok: run out/opt/test


build out/xsan/weft.o: compile weft.c
    cc = $xsan
build out/xsan/test.o: compile test.c
    cc = $xsan
build out/xsan/test: link out/xsan/weft.o out/xsan/test.o
    cc = $xsan
build out/xsan/test.ok: run out/xsan/test


build out/lsan/weft.o: compile weft.c
    cc = $lsan
build out/lsan/test.o: compile test.c
    cc = $lsan
build out/lsan/test: link out/lsan/weft.o out/lsan/test.o
    cc = $lsan
build out/lsan/test.ok: run out/lsan/test
    env = env ASAN_OPTIONS=detect_leaks=1
